{
  "description": "This toast component is built with Radix primitive: https://www.radix-ui.com/primitives/docs/components/toast\n\n### Example\n\n```jsx\nState.init({ showToast: false });\n\nreturn (\n  <Widget\n    src=\"near/widget/DIG.Toast\"\n    props={{\n      title: \"Title\",\n      description: \"This is the toast description\",\n      type: \"success\",\n      open: state.showToast,\n      onOpenChange: (value) => State.update({ showToast: value }),\n      trigger: (\n        <Widget\n          src=\"near/widget/DIG.Button\"\n          props={{\n            label: \"Show Toast\",\n            onClick: () => State.update({ showToast: true }),\n          }}\n        />\n      ),\n      action: (\n        <Widget\n          src=\"near/widget/DIG.Button\"\n          props={{\n            label: \"Dismiss\",\n            onClick: () => State.update({ showToast: false }),\n          }}\n        />\n      ),\n      providerProps: { duration: 1000 },\n    }}\n  />\n);\n```\n\n### Props\n\n`title`\n- type: `string`.\n- _optional_.\n- An optional title for the toast.\n\n`description`\n- type: `string`.\n- `required`.\n- The toast message.\n\n`type`\n- type: `string`.\n- Specifies toast type. Variants: `\"success\"`, `\"error\"`, `\"info\"`, `\"custom\"`.\n- `\"custom\"` allows to specify it's own `iconClassName` and `iconColor`.\n- example:\n```jsx\n{\n// ...\n  type: \"custom\",\n  iconClassName: \"ph ph-airplane-tilt\",\n  iconColor: \"#c9f8f7\"\n}\n``` \n\n`open`\n- type: `boolean`,\n- `required`.\n- The controlled open state of the dialog. Must be used in conjunction with `onOpenChange`.\n\n`onOpenChange`\n- type: `function`.\n- `required`.\n- Event handler called when the open state of the dialog changes.\n\n`trigger`\n- type: `JSX`.\n- _optional_.\n- Renders the element that will display the toast when clicked. \n\n`action`\n- type: `JSX`.\n- _optional_.\n- An action that is safe to ignore to ensure users are not expected to complete tasks with unexpected side effects as a result of a time limit.\n\n`providerProps`\n- type: `object`.\n- Radix `Toast.Provider` props https://www.radix-ui.com/primitives/docs/components/toast#provider\n\nThis component also accepts all `Toast.Root` props as outlined in the Radix documentation.",
  "name": "DIG.Toast",
  "tags": {
    "dig": ""
  }
}
